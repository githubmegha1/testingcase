{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "fortestingforicm"
		},
		"ADXTest_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADXTest'"
		},
		"Dataverse1_servicePrincipalCredential": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalCredential' of 'Dataverse1'"
		},
		"PostgreSql1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'PostgreSql1'"
		},
		"Snowflake1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake1'"
		},
		"Snowflake_lab_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake_lab'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"linkedService2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService2'"
		},
		"ADXTest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storagemeghashah1.dfs.core.windows.net/"
		},
		"Dataverse1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "asas"
		},
		"PostgreSql1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"PostgreSql1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "postgres"
		},
		"PostgreSql1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "megha"
		},
		"RyderLookUpAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://apistg.ryder.com"
		},
		"Snowflake1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ewewewe"
		},
		"Snowflake_lab_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ADF_LAB_DATABASE"
		},
		"WHEN_BLOB_ADD_properties_TEST_WAIT_parameters_sourceFolder": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"WHEN_BLOB_ADD_properties_TEST_WAIT_parameters_sourceFileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"WHEN_BLOB_ADD_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/2eec9f1f-2504-4772-a723-cdb649d51509/resourceGroups/ADF/providers/Microsoft.Storage/storageAccounts/eventstoragetesting1"
		},
		"integrationRuntime2_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/2eec9f1f-2504-4772-a723-cdb649d51509/resourcegroups/ADF/providers/Microsoft.DataFactory/factories/ADFrepromegha/integrationruntimes/integrationRuntime3"
		},
		"containerUri": {
			"type": "string",
			"metadata": "URI to storage account containing linked ARM templates"
		},
		"containerSasToken": {
			"type": "string",
			"metadata": "Sas token to storage account containing linked ARM templates"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "fortestingforicm_ArmTemplate_0",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2024-03-01",
			"properties": {
				"mode": "incremental",
				"templateLink": {
					"uri": "[concat(parameters('containerUri'), '/ArmTemplate_0.json', parameters('containerSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"factoryName": {
						"value": "[parameters('factoryName')]"
					},
					"ADXTest_accountKey": {
						"value": "[parameters('ADXTest_accountKey')]"
					},
					"Dataverse1_servicePrincipalCredential": {
						"value": "[parameters('Dataverse1_servicePrincipalCredential')]"
					},
					"Snowflake1_password": {
						"value": "[parameters('Snowflake1_password')]"
					},
					"Snowflake_lab_password": {
						"value": "[parameters('Snowflake_lab_password')]"
					},
					"linkedService2_connectionString": {
						"value": "[parameters('linkedService2_connectionString')]"
					},
					"PostgreSql1_password": {
						"value": "[parameters('PostgreSql1_password')]"
					},
					"linkedService1_connectionString": {
						"value": "[parameters('linkedService1_connectionString')]"
					},
					"ADXTest_properties_typeProperties_url": {
						"value": "[parameters('ADXTest_properties_typeProperties_url')]"
					},
					"Dataverse1_properties_typeProperties_servicePrincipalId": {
						"value": "[parameters('Dataverse1_properties_typeProperties_servicePrincipalId')]"
					},
					"Snowflake1_properties_typeProperties_database": {
						"value": "[parameters('Snowflake1_properties_typeProperties_database')]"
					},
					"Snowflake_lab_properties_typeProperties_database": {
						"value": "[parameters('Snowflake_lab_properties_typeProperties_database')]"
					},
					"integrationRuntime2_properties_typeProperties_linkedInfo_resourceId": {
						"value": "[parameters('integrationRuntime2_properties_typeProperties_linkedInfo_resourceId')]"
					},
					"PostgreSql1_properties_typeProperties_server": {
						"value": "[parameters('PostgreSql1_properties_typeProperties_server')]"
					},
					"PostgreSql1_properties_typeProperties_database": {
						"value": "[parameters('PostgreSql1_properties_typeProperties_database')]"
					},
					"PostgreSql1_properties_typeProperties_username": {
						"value": "[parameters('PostgreSql1_properties_typeProperties_username')]"
					},
					"WHEN_BLOB_ADD_properties_TEST_WAIT_parameters_sourceFolder": {
						"value": "[parameters('WHEN_BLOB_ADD_properties_TEST_WAIT_parameters_sourceFolder')]"
					},
					"WHEN_BLOB_ADD_properties_TEST_WAIT_parameters_sourceFileName": {
						"value": "[parameters('WHEN_BLOB_ADD_properties_TEST_WAIT_parameters_sourceFileName')]"
					},
					"WHEN_BLOB_ADD_properties_typeProperties_scope": {
						"value": "[parameters('WHEN_BLOB_ADD_properties_typeProperties_scope')]"
					},
					"RyderLookUpAPI_properties_typeProperties_url": {
						"value": "[parameters('RyderLookUpAPI_properties_typeProperties_url')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}